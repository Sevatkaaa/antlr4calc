//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Sov\Source\Repos\antlr-calculator\KNU.TOKT.Calculator\LabCalculator.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace KNU.TOKT.Calculator {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ILabCalculatorListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class LabCalculatorBaseListener : ILabCalculatorListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>NumberExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberExpression([NotNull] LabCalculatorParser.NumberExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NumberExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberExpression([NotNull] LabCalculatorParser.NumberExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>NegativeNumberExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNegativeNumberExpression([NotNull] LabCalculatorParser.NegativeNumberExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NegativeNumberExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNegativeNumberExpression([NotNull] LabCalculatorParser.NegativeNumberExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>PowerExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPowerExpression([NotNull] LabCalculatorParser.PowerExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PowerExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPowerExpression([NotNull] LabCalculatorParser.PowerExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesisExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesisExpression([NotNull] LabCalculatorParser.ParenthesisExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesisExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesisExpression([NotNull] LabCalculatorParser.ParenthesisExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>SinusExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSinusExpression([NotNull] LabCalculatorParser.SinusExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SinusExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSinusExpression([NotNull] LabCalculatorParser.SinusExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>CosinusExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCosinusExpression([NotNull] LabCalculatorParser.CosinusExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CosinusExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCosinusExpression([NotNull] LabCalculatorParser.CosinusExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>TangentExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTangentExpression([NotNull] LabCalculatorParser.TangentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TangentExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTangentExpression([NotNull] LabCalculatorParser.TangentExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>LogarithmExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogarithmExpression([NotNull] LabCalculatorParser.LogarithmExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LogarithmExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogarithmExpression([NotNull] LabCalculatorParser.LogarithmExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>MultOrDivideExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultOrDivideExpression([NotNull] LabCalculatorParser.MultOrDivideExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MultOrDivideExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultOrDivideExpression([NotNull] LabCalculatorParser.MultOrDivideExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>PlusOrMinusExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlusOrMinusExpression([NotNull] LabCalculatorParser.PlusOrMinusExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PlusOrMinusExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlusOrMinusExpression([NotNull] LabCalculatorParser.PlusOrMinusExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LabCalculatorParser.root"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRoot([NotNull] LabCalculatorParser.RootContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LabCalculatorParser.root"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRoot([NotNull] LabCalculatorParser.RootContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] LabCalculatorParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LabCalculatorParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] LabCalculatorParser.ExpressionContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace KNU.TOKT.Calculator
