//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Sov\Source\Repos\antlr-calculator\KNU.TOKT.Calculator\LabCalculator.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace KNU.TOKT.Calculator {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="LabCalculatorParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ILabCalculatorVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>NumberExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberExpression([NotNull] LabCalculatorParser.NumberExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>NegativeNumberExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNegativeNumberExpression([NotNull] LabCalculatorParser.NegativeNumberExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>PowerExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPowerExpression([NotNull] LabCalculatorParser.PowerExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ParenthesisExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesisExpression([NotNull] LabCalculatorParser.ParenthesisExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>SinusExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSinusExpression([NotNull] LabCalculatorParser.SinusExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>CosinusExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCosinusExpression([NotNull] LabCalculatorParser.CosinusExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>TangentExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTangentExpression([NotNull] LabCalculatorParser.TangentExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>LogarithmExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogarithmExpression([NotNull] LabCalculatorParser.LogarithmExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>MultOrDivideExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultOrDivideExpression([NotNull] LabCalculatorParser.MultOrDivideExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>PlusOrMinusExpression</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlusOrMinusExpression([NotNull] LabCalculatorParser.PlusOrMinusExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="LabCalculatorParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRoot([NotNull] LabCalculatorParser.RootContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] LabCalculatorParser.ExpressionContext context);
}
} // namespace KNU.TOKT.Calculator
